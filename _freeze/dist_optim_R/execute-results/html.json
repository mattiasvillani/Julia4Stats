{
  "hash": "6b38f162d17f686c235840a67c90f9a7",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Statistics with Julia\"\nauthor: \"Mattias Villani\"\neditor: visual\n---\n\n## Statistical distributions\n\n-   Julia has a fantastic unified system for statistical distributions, implemented mainly in the `Distributions.jl` package.\n\n-   Similar to Python, but different from R, **distributions are objects**.\n\n-   We can call functions on a `dist = Normal()` object, for example\n\n    -   `pdf(dist, 2.0)` computes the pdf at `x=2.0`\n\n    -   `cdf(dist, 2.0)` computes the cdf at `x=2.0`\n\n    -   `rand(dist)` generates random numbers from N(0,1)\n\n    -   `mean(dist)` and `var(dist)` returns the mean and variance.\n\n\n    ::: {#b9b107c4 .cell execution_count=1}\n    ``` {.julia .cell-code}\n    using Distributions\n    dist = Normal(1,3) \n    pdf(dist, 0)\n    cdf(dist, 0) \n    quantile(dist, 0.5)\n    rand(dist, 10) \n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=2}\n    ```\n    10-element Vector{Float64}:\n      2.1540353732959083\n      1.7214466684941134\n     -0.9836629254822372\n     -1.4790014735025556\n      5.13886268285973\n     -3.1147530698455066\n      6.48192801370562\n      2.966911092385057\n     -4.378027923278169\n      3.5509214581890323\n    ```\n    :::\n    :::\n    \n    \n-   Scale-locations families are generated by addition and multiplication\n\n\n    ::: {#38d29871 .cell execution_count=2}\n    ``` {.julia .cell-code}\n    using Distributions\n    \n    1 + 2*TDist(3)\n    TDist(μ, σ, ν) = μ + σ*TDist(ν)\n    TDist(3)\n    dist = TDist(1, 2, 3)\n    pdf(dist, 0)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=3}\n    ```\n    0.1565904555044143\n    ```\n    :::\n    :::\n    \n    \n## Optimization and Autodiff\n\nThe [Optim.jl](https://julianlsolvers.github.io/Optim.jl/stable/) package is the main package for numerical function optimization.\n\n## Working with R in Julia\n\nThe [Rcall.jl](https://juliainterop.github.io/RCall.jl/stable/) package makes it possible to use R code, functions and packages from a Julia program.\n\n",
    "supporting": [
      "dist_optim_R_files"
    ],
    "filters": [],
    "includes": {}
  }
}