[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Julia for Statistics - a tutorial",
    "section": "",
    "text": "Star\n\nAim\nThis tutorial introduces the Julia programming language and its use for statistical analysis. The following topics will be covered:\n\nintroduction to the Julia programming language\nthe package manager and tooling\nmanaging data in Julia\nplots for statistics\nstatistical distributions and tools\nlikelihood inference using numerical optimization\nprobabilistic programming for statistical inference using Turing.jl\n\n\n\nTeacher\n\nMattias Villani Professor of Statistics Stockholm University\n\n\nWorkshop plan and schedule\n\nLecture 1 - The Julia programming language and tooling Time: 14.00-15.00  Reading: Installing Julia and first try in REPL \nüçé leg stretcher\nLecture 2 - Managing data and plotting Time: 15.00-16.00  Reading: Slides \n‚òï tea break\nLecture 3 - Statistical distributions, optimization and automatic differentiation Time: 16.30-17.30  Reading: Slides \nüçì leg stretcher\nLecture 4 - Probabilistic programming using Turing.jl Time: 17.30-18.30  Reading: Slides\n\nJulia and Turing\n Install Julia  Install VS Code  Install Julia extension for VS Code | Guided Youtube video | Documentation  Install and get started with Turing.jl | Turing tutorials"
  },
  {
    "objectID": "slides/install.html",
    "href": "slides/install.html",
    "title": "Installing Julia and VS Code",
    "section": "",
    "text": "Installing Julia\nThe recommended way to install Julia is using a little tool called juliaup . Benefits of juliaup :\n\nmakes the install really easy\nallows you to switch between different versions of Julia\nnotifies when a new version is available\n\nInstructions on how to install juliaup are here. In short:\n\nOn Mac/Linux: run the following command in terminal:\ncurl -fsSL https://install.julialang.org | sh\nOn Windows, type this in the terminal to install from Windows store:\nwinget install --name Julia --id 9NJNWW8PVKMN -e -s msstore\n\n\n\n\n\n\n\nAvoid Linux repositories\n\n\n\nIt is not recommended to install Julia from repositories on Linux since the versions there can be rather old.\n\n\n\n\n\n\n\n\nUninstall juliaup\n\n\n\nJuliaup can be uninstalled with the terminal command: juliaup self uninstall\n\n\nJulia can now be started by typing julia in the terminal (you may need to restart the shell/terminal so your system can find it). You should see something like:\n\nThis what is known as the console in the R world. In Julia we tend to call it the REPL (Read-Evaluate-Print Loop). We will soon use VS Code as our main working environment (IDE, similar to RStudio, but much more general). But let‚Äôs take a first dive in Julia directly in the REPL.\n\n\nA first try with Julia in the REPL\nThe REPL can be used to evaluate commands as in any interpreted language.\nOld commands can be found quite nicely in the REPL:\n\narrow-up and arrow-down goes back in command history. Typing, for example, myf and then arrow-up cycles old commands that start with myf. Ctrl+r gives more advanced reverse-search.\npast commands can be edited and re-used.\n\n\nThe REPL has several prompt modes, for example:\n\nJulian mode, which is the default seen above.\nHelp mode, activated by typing ? at the prompt. The prompt changes to help?&gt; and you can search for documentation about functions etc. Backspace takes you back to Julian mode.\nShell mode, activated by typing a semicolon ;. The prompt changes to shell&gt; and you can use the usual shell commands for navigating directories, copying files etc. (On Windows, type powershell or cmd at shell&gt; to get access to the shell).\nPkg mode, activated by typing a right bracket ]. This opens the package manager where Julia packages are added and managed.\nSearch mode, activate by ctrl+r, as explained above.\n\n\nUseful keys bindings (here are many more):\n\nCtrl + C to interupt execution\nCtrl + L to clear the REPL"
  }
]